import { Task } from 'fast-glob/out/managers/tasks';
import Settings from 'fast-glob/out/settings';
import { MicromatchOptions, ReaderOptions } from 'fast-glob/out/types';
import DeepFilter from 'fast-glob/out/providers/filters/deep';
import EntryFilter from 'fast-glob/out/providers/filters/entry';
import ErrorFilter from 'fast-glob/out/providers/filters/error';
import EntryTransformer from 'fast-glob/out/providers/transformers/entry';
export default abstract class Provider<T> {
    protected readonly _settings: Settings;
    readonly errorFilter: ErrorFilter;
    readonly entryFilter: EntryFilter;
    readonly deepFilter: DeepFilter;
    readonly entryTransformer: EntryTransformer;
    constructor(_settings: Settings);
    abstract read(_task: Task): T;
    protected _getRootDirectory(task: Task): string;
    protected _getReaderOptions(task: Task): ReaderOptions;
    protected _getMicromatchOptions(): MicromatchOptions;
}
